<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.5.RELEASE</version>
		<relativePath/>
	</parent>

	<groupId>com.github.borisskert</groupId>
	<artifactId>keycloak-tool</artifactId>
	<version>0.12.0-SNAPSHOT</version>

	<name>keycloak-tool</name>
	<description>keycloak-tool (formerly keycloak-config-cli)</description>

	<properties>
		<java.version>11</java.version>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<keycloak.version>9.0.0</keycloak.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>org.keycloak</groupId>
			<artifactId>keycloak-admin-client</artifactId>
			<version>${keycloak.version}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<!-- remove JUnit 4 from classpath -->
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- needed to use the class RestTemplate in tests -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>eu.codearte.catch-exception</groupId>
			<artifactId>catch-exception</artifactId>
			<version>1.4.4</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>28.2-jre</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>

		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<!-- https://stackoverflow.com/a/53433724 -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.0</version>
			</plugin>

			<plugin>
                <!-- defines which files are integration tests and when to run them -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.22.0</version>
				<configuration>
					<includes>
						<include>**/*IT.java</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<!--https://stackoverflow.com/questions/11500533/access-maven-properties-defined-in-the-pom-->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0.0</version>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>write-project-properties</goal>
						</goals>
						<configuration>
							<outputFile>${project.build.testOutputDirectory}/maven.properties</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<!-- starts a keycloak docker container for the integration tests -->
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.27.2</version>
				<configuration>
					<images>
						<image>
							<name>keycloak_it:latest</name>
							<build>
								<dockerFile>${project.basedir}/keycloakIT.Dockerfile</dockerFile>
							</build>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>cleanup-stop-keycloak</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
						<configuration>
							<allContainers>true</allContainers>
						</configuration>
					</execution>
					<execution>
						<id>cleanup-remove-keycloak</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>remove</goal>
						</goals>
						<configuration>
							<removeMode>all</removeMode>
						</configuration>
					</execution>
					<execution>
						<id>build-keycloak</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>build</goal>
						</goals>
						<configuration>
							<buildArgs.keycloak.version>${keycloak.version}</buildArgs.keycloak.version>
						</configuration>
					</execution>
					<execution>
						<id>prepare-keycloak</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<images>
								<image>
									<alias>it-keycloak</alias>
									<run>
										<env>
											<KEYCLOAK_PASSWORD>admin123</KEYCLOAK_PASSWORD>
											<KEYCLOAK_USER>admin</KEYCLOAK_USER>
											<KEYCLOAK_LOGLEVEL>ERROR</KEYCLOAK_LOGLEVEL>
										</env>
										<cmd>
											<exec>
												<arg>-b</arg>
												<arg>0.0.0.0</arg>
												<arg>--debug</arg>
											</exec>
										</cmd>
										<ports>
											<port>+docker.host.ip:docker.port:8080</port>
										</ports>
										<wait>
											<http>
												<url>http://${docker.host.ip}:${docker.port}/auth/</url>
												<status>200</status>
											</http>
											<time>120000</time>
										</wait>
									</run>
								</image>
							</images>
						</configuration>
					</execution>
					<execution>
						<id>stop-keycloak</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
						<configuration>
							<allContainers>true</allContainers>
						</configuration>
					</execution>
					<execution>
						<id>remove-keycloak</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>remove</goal>
						</goals>
						<configuration>
							<removeMode>all</removeMode>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<!-- this plugin replaces the placeholders within application-IT.yml needed for the integration tests -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>copy-resources-for-integration-tests</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>target/test-classes</outputDirectory>
							<resources>
								<resource>
									<directory>src/test/resources</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<!-- verifies if the majority of tests actually ran; avoids successful build because of accidental skipped tests -->
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>COMPLEXITY</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.70</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
